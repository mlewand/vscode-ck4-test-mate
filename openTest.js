
( function() {
	'use strict';

	let vscode = require( 'vscode' );

	exports = function( context ) {
		vscode.window.showInformationMessage( 'It seems to be working!' );

		let curEditor = vscode.window.activeTextEditor,
			curDocument = curEditor && curEditor.document,
			filePath;
		
		if ( !curDocument ) {
			return false;
		}

		if ( curDocument.uri.scheme !== 'file' ) {
			console.log( `File uses ${curDocument.uri.scheme} while only file is supported.` );
			return false;
		}

		// Keeps path like /c:/foo-bar/ck4-test-mate/foo.js.
		filePath = curDocument.uri.path;

		// vscode.window.activeTextEditor.document

		// debugger;

		let cmd = `start ${module.exports.pathToUrl( filePath )}`;

		const opn = require( 'opn' );

		//debugger;

		opn( module.exports.pathToUrl( filePath ) );
	};

	/**
	 * Converts file path into a relevant test URL.
	 * 
	 * @param {String} filePath File path in Unix format. Must not use Windows separators!
	 * @returns {String/Boolean}
	 */
	exports.pathToUrl = function( filePath ) {
		let parts = filePath.split( '/' ),
			testsPartIndex = parts.indexOf( 'tests' ),
			fileName = parts[ parts.length - 1 ],
			testsAddress = exports.testsAddress;

		if ( testsPartIndex === -1 ) {
			// Clearly not in a test directory.
			return false;
		}

		// Note, it includes "tests" part.
		parts = parts.slice( testsPartIndex );

		// Remove extension form the last part (if present).
		if ( fileName.indexOf( '.' ) !== -1 ) {
			parts[ parts.length - 1 ] = fileName.substr( 0, fileName.lastIndexOf( '.' ) );
		}

		return `${testsAddress.protocol}://${testsAddress.domain}:${testsAddress.port}/${parts.join( '/' )}`;
	};

	exports.testsAddress = {
		protocol: 'http',
		domain: 'tests.ckeditor.dev',
		port: 1030
	};

	module.exports = exports;
} )();